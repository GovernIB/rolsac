<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="rolsac-${rolsac.version.tag}" default="mainROLSAC" xmlns:artifact="antlib:org.apache.maven.artifact.ant">
	
	<exec executable="git"  outputproperty="project.version" failifexecutionfails="true" errorproperty="">
			<arg value="rev-parse"/> 
			<arg value="--abbrev-ref"/>
			<arg value="HEAD"/>
	</exec>
	
	<property name="home" value="."/>
	
	
    <property file="${home}/build.${user.name}.properties" />
    <property file="${home}/build.${rolsac.target}.properties"/>
    <property file="${home}/default.properties"/>
    
    <property name="rolsac.target" value="${ant.project.name}"/>
    <property name="doc" value="${home}/doc"/>
    <property name="components" value="${home}/moduls"/>
    <property name="etc" value="${home}/etc"/>
    <property name="etc.jboss" location="${etc}/jboss-${jboss.version}"/>
    <property name="lib" value="${home}/lib"/>
    <property name="lib.caib" location="${lib}/caib"/>
    <property name="axis" location="${lib}/axis"/>
    <property name="output.dir" location="${home}/output"/>
    <property name="product.dir" location="${output.dir}/product"/>
    <property name="moduls.dir" location="${output.dir}/moduls"/>
    <property name="doc.dir" location="${output.dir}/doc"/>
    <property name="projecte.name.rolsac" value="rolsac"/>
	<property name="etc.approlsac" value="${etc}/jboss-${jboss.version}/approlsac" />
    <property name="project.author" value="UTE" />
	<property name="target.dir" location="${home}/target"/>
	<property name="targetouput.dir" location="${target.dir}/output"/>
    
    <property environment="env"/>
    
    <condition property="db.oracle" value="true">
        <contains string="${hibernate.dialect}" substring="oracle" casesensitive="false"/>
    </condition>
    
    <!-- se incluyen targets de ant-contrib -->
    <taskdef resource="net/sf/antcontrib/antcontrib.properties">
        <classpath>
            <pathelement location="${lib}/ant-contrib-0.6.jar"/>
        </classpath>
    </taskdef>
    
    
    <!-- *******************   TASQUES GENERALS  ****************************   -->
    <!-- ====================================================================== -->
    <!-- usage                                                                  -->
    <!-- ====================================================================== -->
    <target name="usage">
        <echo>
            ---------------------------------------------------------------------------------------------------
            Tasques del projecte :
            
            
            ****** Tasques d'ajuda :
            
            usage             : aquesta ajuda
            properties        : mostra les propietats definides
            info              : usage + properties
            
            
            ****** Tasques de preparació :
            
            prepare           : crea l'estructura de directoris necessaria per la construcció de l'aplicació
            
            
            ****** Tasques d'actualització de components :
                    	
            update.extractor  : actualitza eines de text
            update.model      : actualitza el model de dades
            update.persistence: actualitza la capa de persistencia
            update.api        : actualitza la API
        	update.apirest    : actualitza el REST API
            update.XDOCLET    : update.extractor + update.model + update.persistence
            
            update.integracion: actualitza la capa d'integració
            update.back2      : actualitza el mòdul web de backoffice
            update.ws         : actualitza el mòdul web de webservices
            
            
            ****** Tasques de documentacio i control
            
            test.unitario     : executa els tests unitaris
            doc               : genera la documentació de tots els mòduls
            
        	****** Tasques maven
        	
        	solrapiFromMVN 		: obtiene solrapi desde maven y lo incluye al proyecto
        	mavenDeployROLSAC   : deploya el sac-api-client en el repositorio remoto
        	mavenROLSAC         : instala sac-api-client con maven para que pueda ser utilizado por otros proyectos
        	
            ****** Tasques de construccio :
            
            assembleROLSAC  : construeix el ear amb tots els components existents
            mainROLSAC      : construeix tota l'aplicacio
            makeSar           : genera el arxiu SAR per al desplegament (deprecated)
            clean             : esborra els directoris de treball
            deployROLSAC    : copia el ear al directori de deploy
            ---------------------------------------------------------------------------------------------------
        </echo>
    </target>
    
    
    <!-- ================================================================== -->
    <!-- properties                                                         -->
    <!-- ================================================================== -->
    <target name="properties" description="Muestra las propiedades del sistema">
        <echo>
            ---------------------------------------------------------------------------------------------------
            Propietats del sistema:
            
            home=${home}
            components=${components}
            product.dir=${product.dir}
            lib=${lib}
            doc=${doc}
            ant.file=${ant.file}
            ant.version=${ant.version}
            ant.project.name=${ant.project.name}
            ant.java.version=${ant.java.version}
            ---------------------------------------------------------------------------------------------------
        </echo>
        <echoproperties/>
    </target>
    
    
    <target name="clean" description="Destruye los directorios de trabajo">
        <ant dir="moduls/api" target="clean" inheritall="false"/>
        <delete dir="${output.dir}" quiet="yes"/>
    	<delete dir="${target.dir}" quiet="yes"/>
    	<delete file="pom.xml" quiet="yes"/>
    </target>
    
	<target name="generate.properties" description="Genera el archivo de propiedades del build">
		
			
			<!-- IMPORTANTE. PARA QUE FUNCIONE LO SIGUIENTE:
					- En run/External Tools/External tools configuration.
					- Seleccionar el ant.build nuestro y environment y añadir (el valor puede cambiar según la ruta de cada uno del git).
							Name: PATH
							Value: C:\Program Files\Git\bin
					- Si no se agrega, se obtendrá un error de tipo 'git no se reconoce como un comando interno'
			 -->
			<!-- Obtener revisión de GIT . -->
			<exec executable="git"  outputproperty="git.revision" failifexecutionfails="false" errorproperty="">
				        <arg value="rev-parse"/> 
				        <arg value="--short"/>
				        <arg value="HEAD"/>
			</exec>

			
				<tstamp>
					<format property="rolsac.build" pattern="dd-MM-yyyy HH:mm:ss" locale="es,ES"/>
				</tstamp>
		
			<propertyfile file="${moduls.dir}/version.properties">
				<entry key="git.revision" value="${git.revision}" /> 
				<entry key="rolsac.version" value="${rolsac.version}" />
				<entry key="rolsac.build" value="${rolsac.build}" />
				<entry key="project.version" value="${project.version}"/>
				<entry key="project.author" value="${project.author}"/>
				<entry key="java.version" value="${java.version}"/>
				<entry key="rolsac.urlrevision" value="${url.revision}"/>
			</propertyfile>
				
		</target>
	
	
    <!-- ================================================================== -->
    <!-- info                                                               -->
    <!-- ================================================================== -->
    <target name="info" depends="usage,properties"/>
    
    
    
    <!-- ================================================================== -->
    <!-- prepare                                                            -->
    <!-- ================================================================== -->
    <target name="prepare" description="Crea los directorios necesarios para la construcción de la aplicación">
        <mkdir dir="${output.dir}"/>
        <mkdir dir="${product.dir}"/>
        <mkdir dir="${moduls.dir}"/>
        <mkdir dir="${doc.dir}"/>
    	<mkdir dir="${target.dir}"/>
    	<mkdir dir="${targetouput.dir}"/>    	
    </target>
    
    
    
    <!-- ================================================================== -->
    <!-- update                                                             -->
    <!-- ================================================================== -->
    
    <!-- enric@dgtic donat que en els update el inheritall es false, cal pasar rolsac.target explicitament -->
    <target name="update.XDOCLET" description="Actualiza los módulos que generan clases con XDOCLET.">    	
        <antcall target="update.extractor"/>
        <antcall target="update.model"/>
        <antcall target="update.persistence"/>
        <antcall target="update.api"/>
    	<antcall target="update.apirest"/>
    </target>
    
    <target name="update.utils" description="Actualizar utilidades">
        <echo>UTILS</echo>
        <echo> ${javac.encoding} </echo>
        <ant dir="moduls/utils" target="main" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>



    <target name="update.extractor" description="Actualizar herramientas de texto">
        <echo>EXTRACTOR</echo>
        <ant dir="moduls/extractor" target="main" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>
    
    <target name="update.model" description="Actualizar el modelo de datos">
        <echo>MODEL</echo>
        <ant dir="moduls/model" target="main" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>
    
    <target name="update.persistence" description="Actualizar la capa de persistencia">
        <echo>PERSISTENCE</echo>
        <ant dir="moduls/persistence" target="main" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>
    
    <target name="update.integracion" description="Actualizar la capa de integracion">
        <echo>INTEGRACION</echo>
        <ant dir="moduls/integracion" target="main" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>
    
    <target name="update.back2" description="Actualizar el modulo web de backoffice">
        <echo>BACK2</echo>
        <ant dir="moduls/back2" target="main" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>

    <target name="update.ws" description="Actualitar el mdulo web de webservices">
        <echo>WS</echo>
        <ant dir="moduls/ws" target="main" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>

    <!--Oracle afegit ejaen@dgtic -->
    <target name="update.oracle" description="Actualitar el modulo oracle" if="db.oracle">
        <echo>ORACLE</echo>
        <ant dir="moduls/oracle" target="main" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>

    <!-- API Rolsac -->
	 <target name="update.api" description="Actualizar la API">
	        <echo>API</echo>
	        <ant dir="moduls/api" target="main" inheritall="false"/>
	        <propertyset>
	            <propertyref name="rolsac.target"/>
	        </propertyset>
	    </target>
	    
    <target name="update.apiws" description="Actualitar el modulo web de webservices">
        <echo>APIWS</echo>
        <ant dir="moduls/apiws" target="main" inheritall="false"/>
        <propertyset>
            <propertyref name="rolsac.target"/>
        </propertyset>
    </target>

	<target name="update.apirest" description="Actualizar el Rest API">
        <echo>API</echo>
        <ant dir="moduls/apirest" target="main" inheritall="false"/>
        <propertyset>
            <propertyref name="rolsac.target"/>
        </propertyset>
    </target>
    
    <!-- ================================================================== -->
    <!-- doc                                                                -->
    <!-- ================================================================== -->
    <target name="doc" depends="prepare" description="Genera la documentación">
	    <antcall target="doc.utils"/>
	    <antcall target="doc.extractor"/>
	    <antcall target="doc.model"/>
	    <antcall target="doc.persistence"/>
	    <antcall target="doc.oracle"/>
	    <antcall target="doc.integracion"/>
	    <antcall target="doc.back2"/>
	    <antcall target="doc.api"/>
    	<antcall target="doc.apirest"/>
    </target>
    

    <target name="doc.utils" description="Generar documentación de utilidades">
        <echo>UTILS</echo>
        <echo> ${javac.encoding} </echo>
        <ant dir="moduls/utils" target="doc" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>


    <target name="doc.extractor" description="Generar documentación de herramientas de texto">
        <echo>EXTRACTOR</echo>
        <ant dir="moduls/extractor" target="doc" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>
    
    <target name="doc.model" description="Generar documentación del modelo de datos">
        <echo>MODEL</echo>
        <ant dir="moduls/model" target="doc" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>
    
    <target name="doc.persistence" description="Generar documentación de la capa de persistencia">
        <echo>PERSISTENCE</echo>
        <ant dir="moduls/persistence" target="doc" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>
    
    <target name="doc.integracion" description="Generar documentación de la capa de integracion">
        <echo>INTEGRACION</echo>
        <ant dir="moduls/integracion" target="doc" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>
    
    <target name="doc.back2" description="Generar documentación del modulo web de backoffice">
        <echo>BACK2</echo>
        <ant dir="moduls/back2" target="doc" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>

    <target name="doc.oracle" description="Generar documentación del modulo oracle" if="db.oracle">
        <echo>ORACLE</echo>
        <ant dir="moduls/oracle" target="doc" inheritall="false">
            <propertyset>
                <propertyref name="rolsac.target"/>
            </propertyset>
        </ant>
    </target>

    <!-- API Rolsac -->
    <target name="doc.api" description="Generar documentación de la API">
        <echo>API</echo>
        <ant dir="moduls/api" target="doc" inheritall="false"/>
        <propertyset>
            <propertyref name="rolsac.target"/>
        </propertyset>
    </target>
    
	<!-- API Rolsac -->
    <target name="doc.apirest" description="Generar documentación del REST API">
        <echo>API</echo>
        <ant dir="moduls/apirest" target="doc" inheritall="false"/>
        <propertyset>
            <propertyref name="rolsac.target"/>
        </propertyset>
    </target>
    
	
    <!-- ================================================================== -->
    <!-- test.unitario    Executa els tests unitaris                        -->
    <!-- ================================================================== -->
    <target name="test.unitario">
        
        <echo> COMMON </echo>
        <ant dir="test/common" target="main" inheritall="false"/>
        <echo> UTILS </echo>
        <ant dir="moduls/utils" target="test.unitario" inheritall="false"/>
        <echo> EXTRACTOR </echo>
        <ant dir="moduls/extractor" target="test.unitario" inheritall="false"/>
        <echo> MODEL </echo>
        <ant dir="moduls/model" target="test.unitario" inheritall="false"/>
        <echo> PERSISTENCE </echo>
        <ant dir="moduls/persistence" target="test.unitario" inheritall="false"/>
        <echo> INTEGRACION </echo>
        <ant dir="moduls/integracion" target="test.unitario" inheritall="false"/>
        
        <if><equals arg1="${db.oracle}" arg2="true"/>
            <then>
                <echo> ORACLE </echo>
                <ant dir="moduls/oracle" target="test.unitario" inheritall="false"/>
            </then>
        </if>
        
    </target>
    
    
    
    <!-- ================================================================== -->
    <!-- Construeix el fitxer application.xml                                -->
    <!-- ================================================================== -->
    <target name="make.application.xml">
        
        <delete file="${output.dir}/application.xml"/>
        
        <concat destfile="${output.dir}/application.xml" append="true" fixlastline="true">
            <filelist dir="${etc.approlsac}"    files="01.application.begin.xml"/>
            <filelist dir="moduls/extractor"    files="appmodule.xml"/>
            <filelist dir="moduls/model"        files="appmodule.xml"/>
            <filelist dir="moduls/integracion"  files="appmodule.xml"/>
            <filelist dir="moduls/persistence"  files="appmodule.xml"/>
            <filelist dir="moduls/utils"        files="appmodule.xml"/>
            <filelist dir="moduls/back2"        files="appmodule.xml"/>
            <filelist dir="moduls/api"          files="appmodule.xml"/>
            <filelist dir="moduls/apiws"        files="appmodule.xml"/>
            <filelist dir="moduls/ws"           files="appmodule.xml"/>
        	<filelist dir="moduls/apirest"      files="appmodule.xml"/>
        </concat>
        
        <if> <equals arg1="${db.oracle}" arg2="true" />
            <then>
                <concat destfile="${output.dir}/application.xml" append="true" fixlastline="true">
                    <filelist dir="moduls/oracle"     files="appmodule.xml"/>
                </concat>
            </then>
        </if>
        
        <concat destfile="${output.dir}/application.xml" append="true" fixlastline="true">
            <filelist dir="${etc.approlsac}" files="02.application.securityrole.xml"/>
            <filelist dir="${etc.approlsac}" files="03.application.end.xml"/>
        </concat>
        
        <replace file="${output.dir}/application.xml">
            <replacefilter token="@context.back2@" value="${context.back2}"/>
            <replacefilter token="@context.ws@" value="${context.ws}"/>
            <replacefilter token="@prefix.modul@" value="${prefix.modul}"/>
        </replace>
        
    </target>
    
    
    
    <!-- ================================================================== -->
    <!-- assemble                                                           -->
    <!-- ================================================================== -->
    <target name="assembleROLSAC" description="Actualiza el EAR con los componentes generados para rolsac." if="project.author">
        
        <delete file="${product.dir}/${projecte.name.rolsac}.ear" quiet="yes"/>
        <antcall target="make.application.xml"/>
        
        <ear earfile="${product.dir}/${projecte.name.rolsac}.ear" appxml="${output.dir}/application.xml" manifest="${etc.approlsac}/manifest.mf">
            <manifest>
            	 <!--  <attribute name="Version" value="${rolsac.target}"/>-->
            	<attribute name="Version" value="${rolsac.target}"/>
                <attribute name="Built-By" value="${project.author}"/>
                <attribute name="Build-Jdk" value="${java.version}"/>
            	<attribute name="GIT-revision" value="${git.revision}" />
            </manifest>
            
            <metainf dir="${etc.jboss}" includes="jboss-app.xml"/>
            
            <!-- Incluimos los .war y .jar generados con la aplicacin para rolsac-->
            <fileset dir="${moduls.dir}">
            	<include name="${prefix.modul}-utils.jar" />            	
                <include name="extractor.jar" />
                <include name="model.jar" />
                <include name="integracion.war" />
                <include name="${prefix.modul}-persistence.jar" />
                <include name="${prefix.modul}-persistence-client.jar" />
            	<include name="${prefix.modul}-oracle.jar" if="db.oracle"/>
                <include name="${prefix.modul}-back2-persistence.jar" />
                <include name="${prefix.modul}-back2.war" />
                <include name="${prefix.modul}-ws.war" />
                <include name="${prefix.modul}-api.jar" />
                <!-- No incluimos el jar cliente del API (comentar siguiente línea sólo
                    cuando esté corregido  problema al quitar este jar)    -->
                <!-- include name="${prefix.modul}-api-client.jar" / -->
                <include name="${prefix.modul}-apiws.war" />
            	<include name="${prefix.modul}-apirest.war" />
            </fileset>
            
            <!-- No incluimos los .jar externos, solo para stand alone-->
            <!--
            <fileset dir="${lib}">
                <include name="boib.jar" />
                <include name="micromodel.jar" />
                <include name="sac-micropersistence.jar" />
            </fileset>
            -->
            
            <!-- Incluimos los .jar dependientes -->
            <fileset dir="${lib}">
                <include name="hibernate2.jar" />
                <include name="ehcache.jar" />
            	<include name="commons-logging.jar" />
            	<include name="jcl-over-slf4j-1.6.4.jar" />
            	<include if="isJboss3" name="slf4j-api-1.6.4.jar" />
        	 	<include if="isJboss3" name="slf4j-log4j12-1.6.4.jar" />
            	<include name="rome-1.0RC2.jar" /> 
            	<include name="jdom.jar" />
            	<include name="jena-2.6.4.jar" />
            	<include name="iri-0.8.jar" />
            	<include name="icu4j-3.4.4.jar" />       

            </fileset>
        	
        	<fileset dir="${lib}/webcaib">
        			<include if="isJboss5" name="commons-beanutils-1.8.3.jar" />
        	      	<include name="commons-codec-1.5.jar" />
        		  	<include name="commons-discovery-0.5.jar" />
        			<include name="ehcache.jar" />
        			<include name="commons-lang-2.1.jar" />
        			<include name="commons-fileupload-1.2.2.jar" />
        			<include name="jfreechart-1.0.14.jar" />
        			<include name="jcommon-1.0.0.jar" />
        			<include name="quartz-1.8.5.jar"  />
	        		<include if="isJboss5" name="odmg.jar" />
        	</fileset>
            
            <zipfileset dir="${lib}/axis-1.4" prefix="lib">
                <include name="axis.jar" />            	
            </zipfileset>
        	
        	<zipfileset dir="${lib}/axis-1.4">
        		<include name="wsdl4j-1.5.1.jar" />
        	</zipfileset>
        	
        	<zipfileset dir="${lib}/axis2-1.5">
				 <include name="axiom-api-1.2.8.jar" />
        		 <include name="axiom-impl-1.2.8.jar" />
        		 <include name="XmlSchema-1.4.3.jar" />
        		 <include name="neethi-2.0.4.jar" />        		
			</zipfileset>

        	<zipfileset dir="${lib}/jboss">
				 <include name="commons-httpclient-3.1.jar" />
			</zipfileset>
        	
        	<zipfileset dir="${lib}/solr">
                <include name="commons-io-2.4.jar" />
        		<include name="noggit-0.6.jar" />
	        	<include name="stax2-api-3.1.4.jar" />
	        	<include name="zookeeper-3.4.6.jar" />
	        	<include name="httpcore-4.4.1.jar" />
	        	<include name="httpmime-4.4.1.jar" />
	        	<include name="httpclient-4.4.1.jar" />
	        	<include name="solr-solrj-5.5.1.jar" />
	        	<include name="solrapi*.jar" />
        		<include name="jericho-html-2.5.jar" />
            </zipfileset>
        	
        	<zipfileset dir="${lib}/swagger">
				<include name="swagger-annotations-1.5.17.jar" />
			    <include name="swagger-core-1.5.17.jar" />
			</zipfileset>
			
        	<zipfileset dir="${lib}/jersey">
				<include name="jersey-bundle-1.19.1.jar"/>
			</zipfileset>  
        </ear>
        
    </target>
    
    <target name="makeSar" description="Genera el archivo SAR para el despliegue.">
        <delete file="${home}/${projecte.name.rolsac}.sar" quiet="yes"/>
        <jar jarfile="${home}/${projecte.name.rolsac}.sar">
            <metainf dir="${home}" includes="jboss-service.xml"/>
        </jar>
    </target>



    <!-- ================================================================== -->
    <!-- main                                                               -->
    <!-- ================================================================== -->
    <target name="mainROLSAC" depends="checkConditions,prepare,generate.properties" description="Realiza todo el proceso de construccin de ROLSAC">

        <fail unless="project.author" message="Et falta definir la propietat project.author"/>
        <fail unless="deploy.dir" message="Et falta definir la propietat deploy.dir"/>
        <fail unless="jbossServiceDeploy.dir" message="Et falta definir la propietat jbossServiceDeploy.dir"/>

        <echo>
            Version: ${rolsac.target}
            Author: ${project.author}
            Compiler: ${java.version}
            Ant: ${ant.home}
        </echo>

    	<!-- Se añade como primera acción el añadir el sorlapi. -->
    	<antcall target="solrapiFromMVN" />
        <antcall target="update.all"/>
        <antcall target="assembleROLSAC"/>
        <antcall target="deployROLSAC"/>
    	<antcall target="mavenROLSAC"/>
    	<antcall target="mavenDeployROLSAC"/>
    </target>
    
    
    
    <!-- ================================================================== -->
    <!-- propagate                                                          -->
    <!-- ================================================================== -->
    <target name="update.all">
        
        <antcall target="update.utils"/>    	
        <antcall target="update.extractor"/>
        <antcall target="update.model"/>
        <antcall target="update.persistence"/>
        <antcall target="update.oracle"/>
        <antcall target="update.integracion"/>
        <antcall target="update.ws"/>
        <antcall target="update.back2"/>
    	<antcall target="update.api"/>
        <antcall target="update.apiws"/>
    	<antcall target="update.apirest"/>
    	        
        
    </target>
    
    
    
    <!-- ================================================================== -->
    <!-- deploy                                                             -->
    <!-- ================================================================== -->
    <target name="deployROLSAC" if="deploy.dir">
        <copy verbose="true" file="${product.dir}/${projecte.name.rolsac}.ear" todir="${deploy.dir}"/>
        <echo>ES RECOMANA EXECUTAR test.unitario PER COMPROBAR QUE NO S'HAGI CORROMPUT FUNCIONALITAT.</echo>
    </target>
    
    
    
    <!-- ================================================================== -->
    <!-- sonar (analitzador de codi)                                        -->
    <!-- ================================================================== -->
	<target name="proxy">
		<setproxy proxyhost="${proxy.host}" proxyport="${proxy.port}" proxyuser="${proxy.user}" proxypassword="${proxy.pass}" />
	</target>

	<target name="sonar" depends="proxy">

		<!-- list of mandatories Sonar properties -->
		<property name="sonar.jdbc.url" value="${sonar.jdbc.url}" />
        <property name="sonar.jdbc.username" value="sonar" />
        <property name="sonar.jdbc.password" value="sonar" />

        <property name="sonar.host.url" value="${sonar.host.url}" />
        <property name="sonar.projectKey" value="caib:rolsac" />
        <property name="sonar.projectName" value="${rolsac.target}" />
        <property name="sonar.projectVersion" value="${rolsac.target}" />
        <property name="sonar.sources" value="moduls" />

        <!-- Set modules IDs -->
        <property name="sonar.modules"
            value="
        	   api,
        	   back2,
        	   extractor,
        	   integracion,
        	   model,
        	   oracle,
        	   persistence,
        	   utils,
        	   back2-js,
        	"/>

        <!-- modul api -->
        <property name="api.sonar.projectName" value="caib:rolsac-api" />
        <property name="api.sonar.projectBaseDir" value="moduls/api" />
        <property name="api.sonar.sources" value="src" />
        <property name="api.sonar.binaries" value="output/api/classes" />
        <property name="api.sonar.language" value="java" />

        <!-- modul back2 -->
        <property name="back2.sonar.projectName" value="caib:rolsac-back2" />
        <property name="back2.sonar.projectBaseDir" value="moduls/back2" />
        <property name="back2.sonar.sources" value="src" />
        <property name="back2.sonar.binaries" value="output/back2/classes" />
        <property name="back2.sonar.language" value="java" />
    	

        <!-- modul extractor -->
        <property name="extractor.sonar.projectName" value="caib:rolsac-extractor" />
        <property name="extractor.sonar.projectBaseDir" value="moduls/extractor" />
        <property name="extractor.sonar.sources" value="src" />
        <property name="extractor.sonar.binaries" value="output/extractor/classes" />
        <property name="extractor.sonar.language" value="java" />

        <!-- modul integracion -->
        <property name="integracion.sonar.projectName" value="caib:rolsac-integracion" />
        <property name="integracion.sonar.projectBaseDir" value="moduls/integracion" />
        <property name="integracion.sonar.sources" value="src" />
        <property name="integracion.sonar.binaries" value="output/integracion/classes" />
        <property name="integracion.sonar.language" value="java" />

        <!-- modul model -->
        <property name="model.sonar.projectName" value="caib:rolsac-model" />
        <property name="model.sonar.projectBaseDir" value="moduls/model" />
        <property name="model.sonar.sources" value="src" />
        <property name="model.sonar.binaries" value="output/model/classes" />
		<property name="model.sonar.language" value="java" />

        <!-- modul oracle -->
        <property name="oracle.sonar.projectName" value="caib:rolsac-oracle" />
        <property name="oracle.sonar.projectBaseDir" value="moduls/oracle" />
        <property name="oracle.sonar.sources" value="src" />
        <property name="oracle.sonar.binaries" value="output/oracle/classes" />
        <property name="oracle.sonar.language" value="java" />

        <!-- modul persistence -->
        <property name="persistence.sonar.projectName" value="caib:rolsac-persistence" />
        <property name="persistence.sonar.projectBaseDir" value="moduls/persistence" />
        <property name="persistence.sonar.sources" value="src" />
        <property name="persistence.sonar.binaries" value="output/persistence/classes" />
        <property name="persistence.sonar.language" value="java" />

        <!-- modul utils -->
        <property name="utils.sonar.projectName" value="caib:rolsac-utils" />
        <property name="utils.sonar.projectBaseDir" value="moduls/utils" />
        <property name="utils.sonar.sources" value="src" />
        <property name="utils.sonar.binaries" value="output/utils/classes" />
        <property name="utils.sonar.language" value="java" />

        <!-- modul back2 javascript -->
        <property name="back2-js.sonar.projectName" value="caib:rolsac-back2-js" />
        <property name="back2-js.sonar.projectBaseDir" value="moduls/back2" />
        <property name="back2-js.sonar.sources" value="htdocs" />
        <property name="back2-js.sonar.language" value="js" />

        <!-- Execute Sonar -->
        <taskdef uri="antlib:org.sonar.ant" resource="org/sonar/ant/antlib.xml">
        	<classpath>
        		<pathelement path="${lib}/sonar-ant-task-2.0.jar" />
        	</classpath>
        </taskdef>

        <sonar:sonar xmlns:sonar="antlib:org.sonar.ant" />

    </target>

	<target name="checkConditions">
	       <condition property="isJboss5">
	             <equals arg1="${jboss.version}" arg2="5.2"/>
	       </condition>
	       <condition property="isJboss3">
	             <equals arg1="${jboss.version}" arg2="3.2"/>
	       </condition>
		   <condition property="isMavenDeploy">
		   		<equals arg1="${mavencaib.deploy}" arg2="true"/>
		   </condition>
	</target>

	<!-- including tha maven-ant-tasks-jar into classpath -->
	<path id="maven-ant-tasks.classpath" path="lib/maven-ant-tasks-2.1.3.jar" />
	<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpathref="maven-ant-tasks.classpath" />
	
	<!-- Instala la librería en maven. -->
	<target name="mavenROLSAC">
	    	<artifact:pom id="tmp.pom" groupid="${rolsac.groupId}" artifactid="${rolsac.artifactId}" version="${rolsac.version.tag}" packaging="${rolsac.packaging}" name="${rolsac.name}" />
	    	<artifact:writepom pomRefId="tmp.pom" file="output/pom.xml" />
	    	<artifact:remoteRepository id="github-governib-maven-repos" url="${mavencaib.url}" /> 
	    	    	
	    	<artifact:install file="output/moduls/sac-api-client.jar">
	    		<localRepository path="${mvn.repository.path}" />
	    	    <pom file="output/pom.xml" />
	    	</artifact:install>    	
	    	
	    	
	</target>
	
	<!-- Deploya la librería en maven. -->
	<target name="mavenDeployROLSAC"  if="isMavenDeploy">
		<echo>Copiamos sac-api-client y pom.xml</echo>
		<copy file="output/moduls/sac-api-client.jar" tofile="target/sac-api-client-${rolsac.version.tag}.jar" overwrite="true" />
		<copy file="pom.ori.xml" tofile="pom.xml" overwrite="true" />
	    <replace file="pom.xml" token="ROLSAC_VERSION"  value="${rolsac.version.tag}" />
		<replace file="pom.xml" token="ROLSAC_GROUPID"  value="${rolsac.groupId}" />
		<replace file="pom.xml" token="ROLSAC_ARTIFACT"  value="${rolsac.artifactId}" />
		    	    	
		<echo>Comenzamos a realizar el deploy</echo>
		<artifact:mvn  pom="pom.xml" mavenHome="${mvn.installation.path}">
			<arg value="deploy" />
			<arg value="-Dmaven.javadoc.skip=true -Dhttps.protocols=TLSv1.2" />
		</artifact:mvn> 
	</target>		
	
	<!-- Para instalar solrapi de maven. -->
	<target name="solrapiFromMVN" unless="compile.classpath" xmlns:artifact="urn:maven-artifact-ant" description="Copia las librerías solrapi y dependencias en la carpeta.">
		<typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="urn:maven-artifact-ant"
				                 classpath="lib/maven-ant-tasks-2.1.3.jar"/>
				
		<echo>Limpiamos la carpeta lib/solr</echo>
		<delete>
		   <fileset dir="lib/solr">
		       <include name="*.jar"/>
		   </fileset>
		</delete>
		
		<echo>Obtenemos la librería de solrapi (${solrapi.version.tag}) y lo copiamos en la carpeta lib/solr.</echo>
		<!-- ****** SI SE TIENEN PROBLEMAS al descargar la libreria y se usan versiones anteriores a la 1.8 de java puede ser necesario añadir "-Dhttps.protocols=TLSv1.2" como argumentos de la VM del JRE-->		
		<artifact:remoteRepository id="github-governib-maven-repos" url="${mavencaib.url}" /> 
		
		<artifact:dependencies pathId="compile.classpath" filesetId="compile.fileset">
			
			<localRepository path="${mvn.repository.path}" />
			<!-- Repositorio remoto que se activará cuando se deploye solrapi.-->
			<remoteRepository refid="github-governib-maven-repos" />
			
			<dependency groupId="${solrapi.groupId}" artifactId="${solrapi.artifactId}" version="${solrapi.version.tag}" />
		</artifact:dependencies>
		
		<copy todir="lib/solr" flatten="true">
			<fileset refid="compile.fileset" />
			<fileset dir="lib">
	            <include name="commons-collections-*.jar"/>
	            <include name="commons-io-*.jar"/>              
	            <include name="solr*.jar"/>       
	        </fileset> 
	     </copy> 
	</target>
</project>

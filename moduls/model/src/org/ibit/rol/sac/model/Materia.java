/* Generated by Together */

package org.ibit.rol.sac.model;

import java.util.Comparator;
import java.util.Set;

/**
 * Modificado para (PORMAD)
 */

public class Materia extends Traducible implements Comparator {

	private static final long serialVersionUID = -4138848500142267423L;

	public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public Set getProcedimientosLocales() {
        return procedimientosLocales;
    }

    public void setProcedimientosLocales(Set procedimientosLocales) {
        this.procedimientosLocales = procedimientosLocales;
    }

    public Set getUnidadesmaterias() {
        return unidadesmaterias;
    }

    public void setUnidadesmaterias(Set unidadesmaterias) {
        this.unidadesmaterias = unidadesmaterias;
    }

    public String getCodiHita() {
        return codiHita;
    }

    public void setCodiHita(String codiHita) {
        this.codiHita = codiHita;
    }

    public Set getFichas() {
        return fichas;
    }

    public void setFichas(Set fichas) {
        this.fichas = fichas;
    }

    public Set getIconos() {
        return iconos;
    }

    public void setIconos(Set iconos) {
        this.iconos = iconos;
    }

    public void addIcono(IconoMateria icono) {
        icono.setMateria(this);
        iconos.add(icono);
    }

    public void removeIcono(IconoMateria icono) {
        iconos.remove(icono);
    }

     public String getCodigoEstandar() {
        return codigoEstandar;
    }

    public void setCodigoEstandar(String codigoEstandar) {
        this.codigoEstandar = codigoEstandar;
    }

    public void addUnidadMateria(UnidadMateria unidadMateria) {
        unidadMateria.setMateria(this);
        unidadesmaterias.add(unidadMateria);
    }

    public void removeUnidadMateria(UnidadMateria unidadMateria) {
        unidadesmaterias.remove(unidadMateria);
    }
    
    public Archivo getFoto() {
		return foto;
	}

	public void setFoto(Archivo foto) {
		this.foto = foto;
	}

	public Archivo getIcono() {
		return icono;
	}

	public void setIcono(Archivo icono) {
		this.icono = icono;
	}

	public Archivo getIconoGrande() {
		return iconoGrande;
	}

	public void setIconoGrande(Archivo iconoGrande) {
		this.iconoGrande = iconoGrande;
	}

    public boolean isDestacada() {
        return destacada;
    }

    public void setDestacada(boolean destacada) {
        this.destacada = destacada;
    }
    
    public void addMateriaAgrupacionM(MateriaAgrupacionM mata) {
    	mata.setMateria(this);
    	materiasAgrupacionM.add(mata);
    }

    public void removeMateriaAgrupacionM(MateriaAgrupacionM mata) {
    	mata.setMateria(null);
        materiasAgrupacionM.remove(mata);
    }
    
	public Set<MateriaAgrupacionM> getMateriasAgrupacionM() {
		return materiasAgrupacionM;
	}

	public void setMateriasAgrupacionM(Set<MateriaAgrupacionM> materiasAgrupacionM) {
		this.materiasAgrupacionM = materiasAgrupacionM;
	}
	
    public int getOrden() {
		return orden;
	}

	public void setOrden(int orden) {
		this.orden = orden;
	}
	
	public String getNombre() {
		return nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}


	private Long id;
    private String codiHita;
    private Set procedimientosLocales;
    private Set unidadesmaterias;
    private Set fichas;
    private Set iconos;
    private Archivo icono;
    private Archivo iconoGrande;
    private Archivo foto;
    private String codigoEstandar;
    private boolean destacada;
    private int orden;
    private String nombre;
    private Set<MateriaAgrupacionM> materiasAgrupacionM;
	public static final String CE_SENSECLASSIFICAR = "SENSECLA";
	
	
	public Materia(Long id, String nombre, int orden) {
		
		this.id = id;
		this.nombre = nombre;
		this.orden = orden;
		
	}
	
	public Materia() {
		super();
	}

	public boolean equals(Object materia) {

		if (noEsDelTipusMateria(materia)) 
			return false;

		if (noTeIdPeroMateriaSi(materia)) 
			return false;

		if (sonIdsDiferents(materia) ) 
			return false;

		return true;
	}

    
    public int compare(Object o1, Object o2) {
	    Materia u1 = (Materia) o1;
	    Materia u2 = (Materia) o2;
	    return u1.getId().intValue() - u2.getId().intValue();
	}	

	private boolean noEsDelTipusMateria(Object o) {
		return !(o instanceof Materia);
	}
	
	private boolean noTeIdPeroMateriaSi(Object materia) {
		return id==null && ((Materia) materia).id != null;
	}


	private boolean sonIdsDiferents(Object materia) {
		return !id.equals(((Materia)materia).id);
	}
    

    public int hashCode() {
        return (id != null ? id.hashCode() : 0);
    }


    @Override
	public String toString() {
		return "Materia [id=" + id + ", codiHita=" + codiHita
				+ ", codigoEstandar=" + codigoEstandar + ", destacada="
				+ destacada + "]";
	}

    public String getNombreMateria(String idioma) {
        TraduccionMateria tma = (TraduccionMateria) getTraduccion(idioma);
        return tma == null ? null : tma.getNombre();
    }    

}

/* Generated by Together */

package es.caib.rolsac.api.v1;

import java.io.Serializable;

import org.ibit.rol.sac.model.Materia;
import org.ibit.rol.sac.model.TraduccionIniciacion;
import org.ibit.rol.sac.model.TraduccionMateria;

/**
 * Modificado para (PORMAD)
 */

public class MateriaDTO implements Serializable, Comparable<MateriaDTO> {
	
	/**
	 * 
	 */
	private static final long serialVersionUID = 4727135644026202698L;

	private Long id;
    private String codiHita;
    private int numProcedimientos = 0;
    //private Set unidadesmaterias;
    //private Set iconos;
    /*
    private Archivo icono;
    private Archivo iconoGrande;
    private Archivo foto;
    */
    private Long icono;
    private Long iconoGrande;
    private Long foto;
    private String codigoEstandar;
    private boolean destacada;
    
    private String nombre;
    private String descripcion;
    private String palabrasClave;
    
    public MateriaDTO(Materia materia, String idioma) {
    	this.id = materia.getId();
    	this.codiHita = materia.getCodiHita();
    	
    	//this.numProcedimientos = materia.getProcedimientosLocales().size();
    	
    	/*
    	this.unidadesmaterias = new HashSet();
    	Set ums = materia.getUnidadesmaterias();
    	for (Object um:ums) {
    		this.unidadesmaterias.add(((UnidadMateria)um).getId());
    	}*/
    	/*
    	this.iconos = new HashSet();
    	Set icos = materia.getIconos();
    	for (Object ico:icos) {
    		this.iconos.add(((Archivo)ico).getId());
    	}
    	*/
    	
    	/*
    	this.icono = materia.getIcono();
    	this.iconoGrande = materia.getIconoGrande();
    	this.foto = materia.getFoto();
    	*/
    	if (materia.getIcono()!=null) this.icono = materia.getIcono().getId();
    	if (materia.getIconoGrande()!=null) this.iconoGrande = materia.getIconoGrande().getId();
    	if (materia.getFoto()!=null) this.foto = materia.getFoto().getId();
    	this.codigoEstandar = materia.getCodigoEstandar();
    	this.destacada = materia.isDestacada();
    	TraduccionMateria tra = ((TraduccionMateria)materia.getTraduccion(idioma));
		if (tra == null) {
			tra = (TraduccionMateria)materia.getTraduccion();
		}
    	if (tra != null) {
        	this.nombre = tra.getNombre();
        	this.descripcion = tra.getDescripcion();
        	this.palabrasClave = tra.getPalabrasclave();
    	}
    }

    public Long getId() {
        return id;
    }

    
    public int getNumProcedimientos() {
        return numProcedimientos;
    }
    

    /*
    public Set getUnidadesmaterias() {
        return unidadesmaterias;
    }*/

    public String getCodiHita() {
        return codiHita;
    }

    public String getCodigoEstandar() {
        return codigoEstandar;
    }

    /*
    public Archivo getFoto() {
		return foto;
	}

	public Archivo getIcono() {
		return icono;
	}

	public Archivo getIconoGrande() {
		return iconoGrande;
	}
    */
    
    public Long getFoto() {
		return foto;
	}

	public Long getIcono() {
		return icono;
	}

	public Long getIconoGrande() {
		return iconoGrande;
	}
	
	public boolean isDestacada() {
        return destacada;
    }
	
	public String getNombre() {
		return nombre;
	}
	
	public String getDescripcion() {
		return descripcion;
	}
	
	public String getPalabrasClave() {
		return palabrasClave;
	}

	public void setNumProcedimientos(int numProcedimientos) {
		this.numProcedimientos = numProcedimientos;
	}

	public int compareTo( MateriaDTO o ) 
	{
		return this.nombre.compareToIgnoreCase( o.getNombre() );
	}
	
	

}
